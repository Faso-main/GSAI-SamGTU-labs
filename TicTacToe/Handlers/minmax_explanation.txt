Алгоритм Minimax — это рекурсивный алгоритм для поиска оптимального хода в играх с нулевой суммой (где выигрыш одного игрока равен проигрышу другого). В крестиках-ноликах он гарантирует, что бот либо выиграет, либо сведёт игру к ничьей.

]Minimax оценивает все возможные ходы на несколько шагов вперёд и выбирает тот, который максимизирует шансы на победу (или минимизирует шансы на поражение).

"Max" (бот, O) — пытается максимизировать свою оценку (выиграть).

"Min" (игрок, X) — пытается минимизировать оценку (не дать боту выиграть).

Каждому возможному состоянию доски присваивается числовая оценка:

+10 — если бот (O) выиграет.

-10 — если игрок (X) выиграет.

0 — если ничья.

Промежуточные значения — чем глубже рекурсия, тем меньше абсолютное значение (штраф за долгий путь к победе).

Бот (O) ходит первым (на своей "волне" рекурсии).

Для каждого свободного поля:

Ставим O и смотрим, какая оценка получится.

Рекурсивно вызываем minimax для следующего хода (X).

Откатываем ход (backtracking).

Выбираем ход с максимальной оценкой (для бота) или минимальной (для игрока).


Чтобы ускорить алгоритм, можно добавить Alpha-Beta Pruning — отсечение заведомо плохих веток:

Alpha — лучшая уже найденная оценка для Max (бота).

Beta — лучшая уже найденная оценка для Min (игрока).

Если на каком-то шаге:

alpha >= beta — дальше можно не проверять, т.к. игрок не даст боту получить лучший результат.

Полный перебор — Minimax проверяет все возможные сценарии до конца игры.

Оптимальный выбор — бот всегда выбирает ход с лучшей оценкой.

Ничья гарантирована, если игрок тоже играет оптимально.

Вывод: На сложном уровне бот либо выигрывает, либо сводит игру к ничьей. Победить его можно только если он допустит ошибку, но алгоритм Minimax ошибок не делает.